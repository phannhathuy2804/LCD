#include "legato.h"
#include "interfaces.h"

#define ILI9341_YELLOW       0xFFE0   ///< 255, 255, 255
int16_t WIDTH =240;
int16_t HEIGHT=320;

static int8_t rotation;
//static uint16_t color;

#define _height HEIGHT
#define _width WIDTH

void drawPixel( uint16_t* buffer, int16_t x , int16_t y , uint16_t color)
{
	if(buffer) {
	        if((x < 0) || (y < 0) || (x >= _width) || (y >= _height)) return;

	        int16_t t;
	        switch(rotation) {
	            case 1:
	                t = x;
	                x = WIDTH  - 1 - y;
	                y = t;
	                break;
	            case 2:
	                x = WIDTH  - 1 - x;
	                y = HEIGHT - 1 - y;
	                break;
	            case 3:
	                t = x;
	                x = y;
	                y = HEIGHT - 1 - t;
	                break;
	        }

	        buffer[x + y * WIDTH] = color;
	    }

}


COMPONENT_INIT
{
	le_spi_DeviceHandleRef_t spiHandle;
	le_result_t res;
	uint16_t* buffer = (uint16_t *)malloc(240*320);
	//size_t size=240*320;
	memset(buffer, 0, 240*320);
	res = le_spi_Open("spidev1.0", &spiHandle);
	LE_FATAL_IF(res != LE_OK, "le_spi_Open failed with result=%s", LE_RESULT_TXT(res));
	le_spi_Configure(spiHandle, 0, 8, 960000, 0);
	LE_INFO("LCD test");
	drawPixel(buffer,2,2,ILI9341_YELLOW);
	uint8_t* halfBuff = (uint8_t *)malloc(1024*sizeof(uint8_t)); //demo
	memset(halfBuff, 0x00, 1024);
	for(int i=0;i<150;i++){
	halfBuff[10+1*WIDTH]= 0xFF;
	le_result_t res2 = le_spi_WriteHD(spiHandle,halfBuff,1024);
	halfBuff[10+1*WIDTH]= 0xE0;
	res2 = le_spi_WriteHD(spiHandle,halfBuff,1024);
	LE_INFO("LCD test4");
	LE_ASSERT( res2==LE_OK);
	}
	LE_INFO("OK");

}
